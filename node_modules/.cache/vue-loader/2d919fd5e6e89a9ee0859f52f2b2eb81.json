{"remainingRequest":"/www/VueApp/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/www/VueApp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/www/VueApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/VueApp/src/views/manual/ManualPage.vue?vue&type=template&id=50efc3d4&","dependencies":[{"path":"/www/VueApp/src/views/manual/ManualPage.vue","mtime":1667562112779},{"path":"/www/VueApp/node_modules/cache-loader/dist/cjs.js","mtime":1667562104435},{"path":"/www/VueApp/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1667562109283},{"path":"/www/VueApp/node_modules/cache-loader/dist/cjs.js","mtime":1667562104435},{"path":"/www/VueApp/node_modules/vue-loader/lib/index.js","mtime":1667562109283}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}