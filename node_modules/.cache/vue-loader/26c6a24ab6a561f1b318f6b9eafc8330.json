{"remainingRequest":"/www/goldennet/VueApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/goldennet/VueApp/src/views/InternetPricePage.vue?vue&type=template&id=7b1182ed&scoped=true&","dependencies":[{"path":"/www/goldennet/VueApp/src/views/InternetPricePage.vue","mtime":1610705159844},{"path":"/www/goldennet/VueApp/node_modules/cache-loader/dist/cjs.js","mtime":1610705116576},{"path":"/www/goldennet/VueApp/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1610705112176},{"path":"/www/goldennet/VueApp/node_modules/cache-loader/dist/cjs.js","mtime":1610705116576},{"path":"/www/goldennet/VueApp/node_modules/vue-loader/lib/index.js","mtime":1610705112136}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}