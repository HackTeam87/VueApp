{"remainingRequest":"/www/VueApp/node_modules/babel-loader/lib/index.js!/www/VueApp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/www/VueApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/VueApp/src/components/GoogleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/www/VueApp/src/components/GoogleMap.vue","mtime":1667562112763},{"path":"/www/VueApp/node_modules/cache-loader/dist/cjs.js","mtime":1667562104435},{"path":"/www/VueApp/node_modules/babel-loader/lib/index.js","mtime":1667562104343},{"path":"/www/VueApp/node_modules/cache-loader/dist/cjs.js","mtime":1667562104435},{"path":"/www/VueApp/node_modules/vue-loader/lib/index.js","mtime":1667562109283}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJHb29nbGVNYXAiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyBkZWZhdWx0IHRvIE1vbnRyZWFsIHRvIGtlZXAgaXQgc2ltcGxlCiAgICAgIC8vIGNoYW5nZSB0aGlzIHRvIHdoYXRldmVyIG1ha2VzIHNlbnNlCiAgICAgIGNlbnRlcjogewogICAgICAgIGxhdDogNTAuMzc3Mjc0MywKICAgICAgICBsbmc6IDMwLjM4MjA3MjEKICAgICAgfSwKICAgICAgbWFya2VyczogW10sCiAgICAgIHBsYWNlczogW10sCiAgICAgIGN1cnJlbnRQbGFjZTogbnVsbAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdlb2xvY2F0ZSgpOwogIH0sCiAgbWV0aG9kczogewogICAgLy8gcmVjZWl2ZXMgYSBwbGFjZSBvYmplY3QgdmlhIHRoZSBhdXRvY29tcGxldGUgY29tcG9uZW50CiAgICBzZXRQbGFjZTogZnVuY3Rpb24gc2V0UGxhY2UocGxhY2UpIHsKICAgICAgdGhpcy5jdXJyZW50UGxhY2UgPSBwbGFjZTsKICAgIH0sCiAgICBhZGRNYXJrZXI6IGZ1bmN0aW9uIGFkZE1hcmtlcigpIHsKICAgICAgaWYgKHRoaXMuY3VycmVudFBsYWNlKSB7CiAgICAgICAgdmFyIG1hcmtlciA9IHsKICAgICAgICAgIGxhdDogdGhpcy5jdXJyZW50UGxhY2UuZ2VvbWV0cnkubG9jYXRpb24ubGF0KCksCiAgICAgICAgICBsbmc6IHRoaXMuY3VycmVudFBsYWNlLmdlb21ldHJ5LmxvY2F0aW9uLmxuZygpCiAgICAgICAgfTsKICAgICAgICB0aGlzLm1hcmtlcnMucHVzaCh7CiAgICAgICAgICBwb3NpdGlvbjogbWFya2VyCiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5wbGFjZXMucHVzaCh0aGlzLmN1cnJlbnRQbGFjZSk7CiAgICAgICAgdGhpcy5jZW50ZXIgPSBtYXJrZXI7CiAgICAgICAgdGhpcy5jdXJyZW50UGxhY2UgPSBudWxsOwogICAgICB9CiAgICB9LAogICAgZ2VvbG9jYXRlOiBmdW5jdGlvbiBnZW9sb2NhdGUoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKGZ1bmN0aW9uIChwb3NpdGlvbikgewogICAgICAgIF90aGlzLmNlbnRlciA9IHsKICAgICAgICAgIGxhdDogcG9zaXRpb24uY29vcmRzLmxhdGl0dWRlLAogICAgICAgICAgbG5nOiBwb3NpdGlvbi5jb29yZHMubG9uZ2l0dWRlCiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["GoogleMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAmBA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA;AACA;AACA,MAAA,MAAA,EAAA;AAAA,QAAA,GAAA,EAAA,UAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OAHA;AAIA,MAAA,OAAA,EAAA,EAJA;AAKA,MAAA,MAAA,EAAA,EALA;AAMA,MAAA,YAAA,EAAA;AANA,KAAA;AAQA,GAXA;AAaA,EAAA,OAbA,qBAaA;AACA,SAAA,SAAA;AACA,GAfA;AAiBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA,oBAEA,KAFA,EAEA;AACA,WAAA,YAAA,GAAA,KAAA;AACA,KAJA;AAKA,IAAA,SALA,uBAKA;AACA,UAAA,KAAA,YAAA,EAAA;AACA,YAAA,MAAA,GAAA;AACA,UAAA,GAAA,EAAA,KAAA,YAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,EADA;AAEA,UAAA,GAAA,EAAA,KAAA,YAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA;AAFA,SAAA;AAIA,aAAA,OAAA,CAAA,IAAA,CAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,KAAA,YAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,YAAA,GAAA,IAAA;AACA;AACA,KAhBA;AAiBA,IAAA,SAAA,EAAA,qBAAA;AAAA;;AACA,MAAA,SAAA,CAAA,WAAA,CAAA,kBAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA;AACA,UAAA,GAAA,EAAA,QAAA,CAAA,MAAA,CAAA,QADA;AAEA,UAAA,GAAA,EAAA,QAAA,CAAA,MAAA,CAAA;AAFA,SAAA;AAIA,OALA;AAMA;AAxBA;AAjBA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n\r\n    <gmap-map\r\n      :center=\"center\"\r\n      :zoom=\"12\"\r\n      style=\"width:100%;  height: 400px;\"\r\n    >\r\n      <gmap-marker\r\n        :key=\"index\"\r\n        v-for=\"(m, index) in markers\"\r\n        :position=\"m.position\"\r\n        @click=\"center=m.position\"\r\n      ></gmap-marker>\r\n    </gmap-map>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"GoogleMap\",\r\n  data() {\r\n    return {\r\n      // default to Montreal to keep it simple\r\n      // change this to whatever makes sense\r\n      center: { lat: 50.3772743, lng: 30.3820721 },\r\n      markers: [],\r\n      places: [],\r\n      currentPlace: null\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.geolocate();\r\n  },\r\n\r\n  methods: {\r\n    // receives a place object via the autocomplete component\r\n    setPlace(place) {\r\n      this.currentPlace = place;\r\n    },\r\n    addMarker() {\r\n      if (this.currentPlace) {\r\n        const marker = {\r\n          lat: this.currentPlace.geometry.location.lat(),\r\n          lng: this.currentPlace.geometry.location.lng()\r\n        };\r\n        this.markers.push({ position: marker });\r\n        this.places.push(this.currentPlace);\r\n        this.center = marker;\r\n        this.currentPlace = null;\r\n      }\r\n    },\r\n    geolocate: function() {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        this.center = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        };\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src/components"}]}